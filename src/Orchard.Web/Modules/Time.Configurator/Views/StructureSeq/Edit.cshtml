@model Time.Data.EntityModels.Configurator.StructureSeq

@{
    ViewBag.Title = "Edit Structure Sequence";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Structure Sequence</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

@*******************************************************************Makes Only Inactive Checkbox Editable*********************************************************************************************@
<div class="form-group">
    @Html.LabelFor(model => model.ConfigName, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.ConfigName, new { @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.ConfigName)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ConfigData, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.ConfigData, new { @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.ConfigData)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Sequence, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Sequence, new { @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.Sequence)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Lookup, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Lookup, new { @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.Lookup)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LookupSequence, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.LookupSequence, new { @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.LookupSequence)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Global, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Global)
        @Html.ValidationMessageFor(model => model.Global)
    </div>
</div>
@*****************************************************************Makes Edits Enabled With Drop Down Menus********************************************************************************************@
@*<div class="form-group">
        @Html.LabelFor(model => model.ConfigName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ConfigName", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ConfigName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigData, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ConfigData", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ConfigData)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sequence, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Sequence", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Sequence)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lookup, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Lookup", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Lookup)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LookupSequence, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("LookupSequence", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.LookupSequence)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Global, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Global)
            @Html.ValidationMessageFor(model => model.Global)
        </div>
    </div>*@
@**********************************************************************Makes you able to type edits in************************************************************************************************@
@*<div class="form-group">
        @Html.LabelFor(model => model.ConfigName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfigName)
            @Html.ValidationMessageFor(model => model.ConfigName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigData, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfigData)
            @Html.ValidationMessageFor(model => model.ConfigData)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sequence, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sequence)
            @Html.ValidationMessageFor(model => model.Sequence)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lookup, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lookup)
            @Html.ValidationMessageFor(model => model.Lookup)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LookupSequence, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LookupSequence)
            @Html.ValidationMessageFor(model => model.LookupSequence)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Global, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Global)
            @Html.ValidationMessageFor(model => model.Global)
        </div>
    </div>*@
@*****************************************************************************************************************************************************************************************************@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
