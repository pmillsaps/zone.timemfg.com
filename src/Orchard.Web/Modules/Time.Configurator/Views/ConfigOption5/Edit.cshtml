@model Time.Data.EntityModels.Configurator.ConfigOption5

@{
    ViewBag.Title = "Edit Config Option 5";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Config Option 5</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

@*******************************************************************Makes Only Inactive Checkbox Editable*********************************************************************************************@
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ConfigName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConfigName)
                @Html.HiddenFor(model => model.ConfigName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConfigData)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConfigData)
                @Html.HiddenFor(model => model.ConfigData)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Key1)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Key1)
                @Html.HiddenFor(model => model.Key1)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Key2)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Key2)
                @Html.HiddenFor(model => model.Key2)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Key3)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Key3)
                @Html.HiddenFor(model => model.Key3)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Key4)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Key4)
                @Html.HiddenFor(model => model.Key4)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Key5)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Key5)
                @Html.HiddenFor(model => model.Key5)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConfigOption)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConfigOption)
                @Html.HiddenFor(model => model.ConfigOption)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Inactive)
            </dt>

            <dd>
                @Html.EditorFor(model => model.Inactive)
                @Html.ValidationMessageFor(model => model.Inactive)
            </dd>
        </dl>
@*****************************************************************Makes Edits Enabled With Drop Down Menus********************************************************************************************@
@*<div class="form-group">
        @Html.LabelFor(model => model.ConfigName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ConfigName", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ConfigName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigData, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ConfigData", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ConfigData)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key1, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Key1", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Key1)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key2, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Key2", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Key2)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key3, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Key3", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Key3)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key4, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Key4", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Key4)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key5, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Key5", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.Key5)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigOption, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ConfigOption", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ConfigOption)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Inactive, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Inactive)
            @Html.ValidationMessageFor(model => model.Inactive)
        </div>
    </div>*@
@**********************************************************************Makes you able to type edits in************************************************************************************************@
@*<div class="form-group">
        @Html.LabelFor(model => model.ConfigName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfigName)
            @Html.ValidationMessageFor(model => model.ConfigName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigData, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfigData)
            @Html.ValidationMessageFor(model => model.ConfigData)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key1, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key1)
            @Html.ValidationMessageFor(model => model.Key1)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key2, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key2)
            @Html.ValidationMessageFor(model => model.Key2)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key3, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key3)
            @Html.ValidationMessageFor(model => model.Key3)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key4, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key4)
            @Html.ValidationMessageFor(model => model.Key4)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Key5, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Key5)
            @Html.ValidationMessageFor(model => model.Key5)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfigOption, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfigOption)
            @Html.ValidationMessageFor(model => model.ConfigOption)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Inactive, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Inactive)
            @Html.ValidationMessageFor(model => model.Inactive)
        </div>
    </div>*@
@*****************************************************************************************************************************************************************************************************@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
