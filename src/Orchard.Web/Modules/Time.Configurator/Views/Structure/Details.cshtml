@model Time.Data.EntityModels.Configurator.Structure
@using Time.Data.EntityModels.Configurator;


@{
    ViewBag.Title = "Structure Details";
}

<link href="~/Modules/Time.IT/Styles/style.css" rel="stylesheet" />

<h2>@ViewBag.Title</h2>

<div>
    <h4>Structure</h4>
    <p>
        @Html.ActionLink("Back to List", "Index", new { ConfigNames = Model.ConfigName })
    </p>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ConfigName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ConfigName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ConfigData)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ConfigData)
        </dd>

    </dl>
</div>

<hr />

@*Displays structure sequences associated with the structure details you click on*@
<h4>Structure Sequence</h4>

<p>
    @Html.ActionLink("Add Sequence", "Add_Seq", new { id = Model.Id })
</p>

<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            Sequence
        </th>
        <th>
            Lookup
        </th>
        <th>
            Lookup Sequence
        </th>
        <th>
            Description
        </th>
        <th>
            Global
        </th>
        <th></th>
        <th></th>
        <th></th>
    </tr>
    @foreach (var item in ViewBag.StructureSeq as IEnumerable<Time.Data.EntityModels.Configurator.StructureSeq>)
    {
        <tr>
            <td>
                @item.Sequence
            </td>
            <td>
                @item.Lookup
            </td>
            <td>
                @item.LookupSequence
            </td>
            <td>
                @item.Notes
            </td>
            <td>
                @Html.CheckBox("StructureSeq", @item.Global, new { @disabled = "disabled" })
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit_Seq", new { id = @item.Id })
            </td>
            <td>
                @Html.ActionLink("Import To Lookup", "Import_Seq", new { id = @item.Id }) |
                @Html.ActionLink("Copy To Existing Configurator", "Copy_Seq", new { id = @item.Id })
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", "StructureSeq", new { id = @item.Id }, null)
            </td>
        </tr>
    }
</table>

<hr />

@*Displays lookups associated with the structure details you click on*@
<h4>Lookups</h4>

<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            Data
        </th>
        <th>
            Pick Default
        </th>
        <th>
            Inactive
        </th>
    </tr>
    @foreach (var item in ViewBag.Lookup as IEnumerable<Time.Data.EntityModels.Configurator.Lookup>)
    {
        @Html.Partial("_Lookup", item)
    }
</table>

<hr />

@*Displays complex structures associated with the structure details you click on*@
<h4>Complex Structure</h4>

<p>
    @Html.ActionLink("Add Complex Structure", "Add_CS", new { id = Model.Id })
</p>

<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            Sequence
        </th>
        <th>
            Lookup Data
        </th>
        <th>
            Description
        </th>
        <th>
            Lookup Sequence
        </th>
    </tr>
    @foreach (var item in ViewBag.ComplexStructure as IEnumerable<Time.Data.EntityModels.Configurator.ComplexStructure>)
    {
        @Html.Partial("_ComplexStructure", item)
    }
</table>

<hr />

@*Displays complex lookups associated with the complex structures*@
<h4>Complex Lookup</h4>

<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            Lookup Data
        </th>
    </tr>
    @foreach (var item in ViewBag.ComplexLookup as IEnumerable<Time.Data.EntityModels.Configurator.ComplexLookup>)
    {
        @Html.Partial("_ComplexLookup", item)
    }
</table>



<hr />

<p>
    @Html.ActionLink("Back to List", "Index", new { ConfigNames = Model.ConfigName })
</p>
