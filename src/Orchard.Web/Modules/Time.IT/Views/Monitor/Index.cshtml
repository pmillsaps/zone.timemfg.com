@{
    ViewBag.Title = "Monitor Index";
    Script.Require("jQuery");
    Script.Include("~/Modules/Time.IT/Scripts/DataTables/jquery.dataTables.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/DataTables/dataTables.bootstrap.min.js").AtFoot();
}
@*<link href="~/Modules/Time.IT/Styles/dataTables.bootstrap.min.css" rel="stylesheet" />*@
<link href="~/Modules/Time.IT/Styles/font-awesome.css" rel="stylesheet" />
<link href="~/Modules/Time.IT/Styles/dataTableSortIcons.css" rel="stylesheet" />

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-2">
        <a class="popup btn btn-primary" href="Monitor/Create" >Add New Monitor</a>
    </div>
    <div class="col-md-10">
        <p style="margin-bottom:20px; margin-top:20px;"><strong>Note: All columns are sortable. The Search includes all columns.</strong></p>
    </div>
</div>
<div class="tablecontainer">
    <table id="monitorsTable" class="table table-striped table-hover table-bordered">
        <thead>
            <tr class="success">
                <td>@Html.Label("Model")</td>
                <td>@Html.Label("Serial No")</td>
                <td>@Html.Label("Asset Id")</td>
                <td>@Html.Label("Purchase Date")</td>
                <td>@Html.Label("Purchased From")</td>
                <td>@Html.Label("PO")</td>
                <td>@Html.Label("Cost")</td>
                <td>@Html.Label("MFR Name")</td>
                <td>@Html.Label("Size")</td>
                <td>@Html.Label("User Name")</td>
                <td></td>
                <td></td>
            </tr>
        </thead>
    </table>
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        $(document).ready(function () {
            var urlLM = '@Url.Action("LoadMonitors", "Monitor")';
            var oTable = $("#monitorsTable").DataTable({
                "ajax": {
                    "url": urlLM,
                    "type": "GET",
                    "datatype": "json"
                },
                "order": [[7, "asc"]],
                "displayLength": -1,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "columns": [
                    {
                        "data": null, "autoWidth": true, "render": function (data, type, row) {
                            return '<a class="popup" href="Monitor/Details/' + row.Id + '">'+ row.Model +'</a>';
                        }
                    },
                    { "data": "SerialNo", "autoWidth": true },
                    { "data": "AssetId", "autoWidth": true },
                    {
                        "data": "PurchaseDate", "autoWidth": true, "render": function (data, type, full) {
                            return (dtConvFromJSON(data));
                        }
                    },
                    { "data": "PurchasedFrom", "autoWidth": true },
                    { "data": "PO", "autoWidth": true },
                    { "data": "Cost", "autoWidth": true },
                    { "data": "MFRName", "autoWidth": true },
                    { "data": "Size", "autoWidth": true },
                    { "data": "UserName", "autoWidth": true },
                    {
                        "data": "Id", "width": "20px", "sortable": false, "render": function (data) {
                            return '<a class="popup" href="Monitor/Edit/' + data + '"><img src="/Media/Default/Page/EditIcon.png" width="20" height="20"/></a>';
                        }
                    },
                    {
                        "data": "Id", "width": "20px", "sortable": false, "render": function (data) {
                            return '<a class="popup" href="Monitor/Delete/' + data + '"><img src="/Media/Default/Page/DeleteIcon.png" width="20" height="20"/></a>';
                        }
                    }
                ]
            })

            function dtConvFromJSON(data) {
                if (data == null) return '';
                var r = /\/Date\(([0-9]+)\)\//gi
                var matches = data.match(r);
                if (matches == null) return '1/1/1950';
                var result = matches.toString().substring(6, 19);
                var epochMilliseconds = result.replace(/^\/Date\(([0-9]+)([+-][0-9]{4})?\)\/$/, '$1');
                var b = new Date(parseInt(epochMilliseconds));
                var c = new Date(b.toString());
                var curr_date = c.getDate();
                var curr_month = c.getMonth() + 1;
                var curr_year = c.getFullYear();
                var curr_h = c.getHours();
                var curr_m = c.getMinutes();
                var curr_s = c.getSeconds();
                var curr_offset = c.getTimezoneOffset() / 60
                var d = curr_month.toString() + '/' + curr_date + '/' + curr_year;// + " " + curr_h + ':' + curr_m + ':' + curr_s;
                return d;
            }
        });
    </script>
}