@{
    ViewBag.Title = "Monitor Index";
    Script.Require("jQuery");
    Script.Include("~/Modules/Time.IT/Scripts/jquery-3.1.1.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/jquery.validate.min.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/jquery.validate.unobtrusive.min.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/jquery-ui-1.12.1.min.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/DataTables/jquery.dataTables.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/DataTables/dataTables.bootstrap.min.js").AtFoot();
}
<link href="~/Modules/Time.IT/Styles/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Modules/Time.IT/Styles/jquery-ui.min.css" rel="stylesheet" />

<h2>@ViewBag.Title</h2>

<div class="tablecontainer">
    <a class="popup btn btn-primary" href="Monitor/Create" style="margin-bottom:20px; margin-top:20px;">Add New Monitor</a>
    <table id="myTable" class="table table-striped table-hover table-bordered">
        <thead>
            <tr class="success">
                <td>Model</td>
                <td>Serial No</td>
                <td>Asset Id</td>
                <td>Purchase Date</td>
                <td>Purchased From</td>
                <td>PO</td>
                <td>Cost</td>
                <td>MFR Name</td>
                <td>Size</td>
                <td>User Name</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </thead>
    </table>
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        $(document).ready(function () {
            var urlLM = '@Url.Action("LoadMonitors", "Monitor")';
            var oTable = $("#myTable").DataTable({
                "ajax": {
                    "url": urlLM,
                    "type": "GET",
                    "datatype": "json"
                },
                "order": [[7, "asc"]],
                "columns": [
                    { "data": "Model", "autoWidth": true },
                    { "data": "SerialNo", "autoWidth": true },
                    { "data": "AssetId", "autoWidth": true },
                    {
                        "data": "PurchaseDate", "autoWidth": true, "render": function (data, type, full) {
                            return (dtConvFromJSON(data));
                        }
                    },
                    { "data": "PurchasedFrom", "autoWidth": true },
                    { "data": "PO", "autoWidth": true },
                    { "data": "Cost", "autoWidth": true },
                    { "data": "MFRName", "autoWidth": true },
                    { "data": "Size", "autoWidth": true },
                    { "data": "UserName", "autoWidth": true },
                    {
                        "data": "Id", "width": "20px", "sortable": false, "render": function (data) {
                            return '<a class="popup" href="Monitor/Edit/' + data + '"><img src="~/Media/Default/Page/EditIcon.png" width="20" height="20"/></a>';
                        }
                    },
                    {
                        "data": "Id", "width": "20px", "sortable": false, "render": function (data) {
                            return '<a class="popup" href="Monitor/Details/' + data + '"><img src="~/Media/Default/Page/DetailIcon.png" width="20" height="20"/></a>';
                        }
                    },
                    {
                        "data": "Id", "width": "20px", "sortable": false, "render": function (data) {
                            return '<a class="popup" href="Monitor/Delete/' + data + '"><img src="~/Media/Default/Page/DeleteIcon.png" width="20" height="20"/></a>';
                        }
                    }
                ]
            })
            //$('.tablecontainer').on('click', 'a.popup', function (e) {
            //    e.preventDefault();
            //    OpenPopup($(this).attr('href'));
            //})
            //function OpenPopup(pageUrl) {
            //    var $pageContent = $('<div/>');
            //    $pageContent.load(pageUrl, function () {
            //        $('#popupForm', $pageContent).removeData('validator');
            //        $('#popupForm', $pageContent).removeData('unobtrusiveValidation');
            //        $.validator.unobtrusive.parse('form');

            //    });

            //    $dialog = $('<div class="popupWindow" style="overflow:auto"></div>')
            //                .html($pageContent)
            //                .dialog({
            //                    draggable: false,
            //                    autoOpen: false,
            //                    resizable: false,
            //                    model: true,
            //                    title: 'Popup Dialog',
            //                    height: 550,
            //                    width: 600,
            //                    close: function () {
            //                        $dialog.dialog('destroy').remove();
            //                        oTable.ajax.reload();
            //                    }
            //                })

            //    $('.popupWindow').on('submit', '#popupForm', function (e) {
            //        var url = $('#popupForm')[0].action;
            //        $.ajax({
            //            type: "POST",
            //            url: url,
            //            data: $('#popupForm').serialize(),
            //            success: function (data) {
            //                if (data.status) {
            //                    $dialog.dialog('close');
            //                    oTable.ajax.reload();
            //                }
            //            }
            //        })

            //        e.preventDefault();
            //    })
            //    $dialog.dialog('open');
            //}

            function dtConvFromJSON(data) {
                if (data == null) return '1/1/1950';
                var r = /\/Date\(([0-9]+)\)\//gi
                var matches = data.match(r);
                if (matches == null) return '1/1/1950';
                var result = matches.toString().substring(6, 19);
                var epochMilliseconds = result.replace(/^\/Date\(([0-9]+)([+-][0-9]{4})?\)\/$/, '$1');
                var b = new Date(parseInt(epochMilliseconds));
                var c = new Date(b.toString());
                var curr_date = c.getDate();
                var curr_month = c.getMonth() + 1;
                var curr_year = c.getFullYear();
                var curr_h = c.getHours();
                var curr_m = c.getMinutes();
                var curr_s = c.getSeconds();
                var curr_offset = c.getTimezoneOffset() / 60
                var d = curr_month.toString() + '/' + curr_date + '/' + curr_year;// + " " + curr_h + ':' + curr_m + ':' + curr_s;
                return d;
            }
        });
    </script>
}