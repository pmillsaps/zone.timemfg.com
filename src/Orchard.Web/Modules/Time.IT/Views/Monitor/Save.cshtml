
@model Time.Data.EntityModels.ITInventory.Monitor

@if (Model.Id > 0)
{ <h2>Edit Monitor</h2> }
else
{ <h2>Create New Monitor</h2> }

@using (Html.BeginForm("Save", "Monitor", FormMethod.Post, new { id = "popupForm" }))
{
    if (Model != null && Model.Id > 0)
    {
        @Html.HiddenFor(model => model.Id)
    }
    <div class="form-group">
        @Html.Label("User")
        @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
    </div>

        <div class="form-group">
            @Html.Label("Manufacturer")
            @Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model)
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SerialNo)
            @Html.EditorFor(model => model.SerialNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssetId)
            @Html.EditorFor(model => model.AssetId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AssetId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Size")
            @Html.DropDownList("SizeId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
            @Html.ValidationMessageFor(model => model.SizeId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseDate)
            @Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchasedFrom)
            @Html.EditorFor(model => model.PurchasedFrom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PurchasedFrom, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PO)
            @Html.EditorFor(model => model.PO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PO, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost)
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>

        <div>
            <input class="btn btn-primary" type="submit" value="Save" />
        </div>

}

