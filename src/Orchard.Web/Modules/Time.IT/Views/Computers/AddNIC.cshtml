@model Time.Data.EntityModels.ITInventory.Ref_NIC

@{
    ViewBag.Title = "Add NIC";
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-fluid alert alert-info">
        <div class="row">
            <div class="col-md-12">
                <div class="form-horizontal">
                    <h4>Ref_NIC</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.MAC, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MAC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MAC, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IP, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SpeedId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SpeedId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
                            @Html.ValidationMessageFor(model => model.SpeedId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SwitchPortId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SwitchPortId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
                            @Html.ValidationMessageFor(model => model.SwitchPortId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CableId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CableId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
                            @Html.ValidationMessageFor(model => model.CableId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ComputerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ComputerId", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
                            @Html.ValidationMessageFor(model => model.ComputerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add NIC Card" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index") | 
    @Html.ActionLink("Back to Computer", "Details", new { id = Model.ComputerId})
</div>
