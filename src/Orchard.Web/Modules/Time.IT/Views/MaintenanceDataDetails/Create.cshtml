@model Time.Data.EntityModels.ITInventory.MaintenanceDataDetail

@{
    Style.Require("jQueryUI_DatePicker").AtHead();
    Script.Require("jQueryUI_DatePicker").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/jquery.validate.min.js").AtFoot();
    Script.Include("~/Modules/Time.IT/Scripts/jquery.validate.unobtrusive.min.js").AtFoot();
}

<h3>Create</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Budget Item", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("MaintenanceDataId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaintenanceDataId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control showDatePicker" , @placeholder = "Required field" } })
                @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control showDatePicker", @placeholder = "Required field" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("Duration", null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Monthly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Monthly, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Monthly, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Explanation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Explanation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Explanation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AlternateInfo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.AlternateInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AlternateInfo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Create" class="btn btn-primary" />
                @if (ViewBag.NoModal == 0)
                {<input type="button" value="Close" data-dismiss="modal" class="btn btn-primary" />}
            </div>
        </div>
    </div>
}
@if (ViewBag.NoModal == 1)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}


@using (Script.Foot())
{
    <script type="text/javascript">

        $(".showDatePicker").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true
        });
    </script>
}