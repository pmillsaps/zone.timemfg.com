@model Time.Data.EntityModels.TimeMFG.Term_Employees

@{
    ViewBag.Title = "Edit Employee";
}

<h2>@ViewBag.Title</h2>

<h4>Employees</h4>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Terminated, "Employed/Terminated", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="col-md-12">
                    @if (Model.Terminated == false)
                    {
                        var listItems = new List<SelectListItem>
    {
       new SelectListItem { Text = "Employed", Value="Employed" },
       new SelectListItem { Text = "Terminated", Value="Terminated" },
    };
                        @Html.DropDownList("ddl", new SelectList(listItems, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    }
                    else
                    {
                        var listItems = new List<SelectListItem>
    {
       new SelectListItem { Text = "Terminated", Value="Terminated" },
       new SelectListItem { Text = "Employed", Value="Employed" },
    };
                        @Html.DropDownList("ddl", new SelectList(listItems, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TerminatedDate, "Hire/Terminated Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TerminatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TerminatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
