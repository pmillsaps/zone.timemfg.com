@model Time.Data.EntityModels.ITInventory.MaintenanceData

@{
    Style.Require("jQueryUI_DatePicker").AtHead();
    Script.Require("jQueryUI_DatePicker").AtFoot();
    ViewBag.Title = "Create";
}

<h3>Create</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BudgetItem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.BudgetItem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BudgetItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Supplier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Supplier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OriginalPurchDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.OriginalPurchDate, new { htmlAttributes = new { @class = "form-control showDatePicker" } })
                @Html.ValidationMessageFor(model => model.OriginalPurchDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.ComputerId, ViewBag.ComputerId  as SelectList, "--  Optional  --", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComputerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LicenseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.LicenseId, ViewBag.LicenseId as SelectList, "--  Optional  --", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicenseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Create" class="btn btn-primary" />
                @if (ViewBag.NoModal == 0)
                {<input type="button" value="Close" data-dismiss="modal" class="btn btn-primary" />}
            </div>
        </div>
    </div>
}

@if (ViewBag.NoModal == 1)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@using (Script.Foot())
{
    <script type="text/javascript">

        $(".showDatePicker").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true
        });
    </script>
}