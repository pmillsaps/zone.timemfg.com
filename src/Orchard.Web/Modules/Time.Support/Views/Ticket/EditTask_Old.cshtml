@model Time.Data.EntityModels.TimeMFG.TicketTask

@{
    ViewBag.Title = "Edit Task";
}

<div class="container">
    <div class="row">

        @Html.Action("SideBar")

        <div class="col-md-9 col-sm-9 col-xs-9">
            <div class="row">
                <h2>@ViewBag.Title</h2>
            </div>
            <div class="row">
                <hr />
            </div>

            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="row text-info">
                    @ViewBag.Message
                </div>
            }

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.TicketID)
                    @Html.HiddenFor(model => model.CompletionDate)
                    @Html.HiddenFor(model => model.Requestor)
                    @Html.HiddenFor(model => model.RequestDate)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Task, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Task, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedTo, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.AssignedTo, null, htmlAttributes: new { @class = "form-control" }, optionLabel: "-- Select --")
                            @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Completed)
                                @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-1">
                            <input type="submit" value="Update Task" class="btn btn-default" />
                        </div>
                        <div class="col-md-offset-1 col-md-4">
                            @Html.ActionLink("Delete Task", "DeleteTask", new { id = Model.ID }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            }

            <div class="col-md-offset-2  col-md-10">
                @Html.ActionLink("Cancel", "Info", new { id = Model.TicketID })
            </div>
        </div>
    </div>
</div>