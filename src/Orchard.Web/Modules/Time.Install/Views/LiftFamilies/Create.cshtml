@model Time.Install.ViewModels.LiftFamilyViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div align="right">
    @Html.ActionLink("Back to Main Menu", "Index", "Home")
</div>
<div align="right">
    @Html.ActionLink("Back to List", "Index")
</div>

@Html.Partial("_CFGsAndItsLifts", ViewBag.CFGAndItsLifts as IEnumerable<Time.Data.EntityModels.Configurator.Lookup>)
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="container-fluid bg-info" style="border-radius: 5px;">
        <div class="row">
            <div class="col-md-6">
                <h4>Lift Family</h4>
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Lift.FamilyName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @*@Html.EditorFor(model => model.Lift.FamilyName, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })*@
                            @Html.DropDownListFor(model => model.Lift.FamilyName, ViewBag.FamilyName as SelectList, new { htmlAttributes = new { @class = "form-control" }, @autofocus = "autofocus" })
                            @Html.ValidationMessageFor(model => model.Lift.FamilyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lift.InstallHours, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Lift.InstallHours, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Lift.InstallHours, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lift.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Lift.Description, new { htmlAttributes = new { @class = "form-control" }, @rows = 19 })
                            @Html.ValidationMessageFor(model => model.Lift.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h4>Chassis Specifications</h4>
                <div class="col-md-12">
                    <p><span class="label label-warning">Notice:</span> Enter numbers only in the following fields. You can use commas or dashes, but
                    do not enter the abbreviations <i>in.</i> or <i>lbs.</i> in the text boxes.</p>
                </div>
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.CbToAxDimension, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.CbToAxDimension, new { htmlAttributes = new { @class = "form-control", @placeholder = "in." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.CbToAxDimension, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.FrmSctnModulus, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.FrmSctnModulus, new { htmlAttributes = new { @class = "form-control", @placeholder = "in³" } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.FrmSctnModulus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.FrmRsistngBndngMmnt, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.FrmRsistngBndngMmnt, new { htmlAttributes = new { @class = "form-control", @placeholder = "in-lbs." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.FrmRsistngBndngMmnt, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.FrontGAWR, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.FrontGAWR, new { htmlAttributes = new { @class = "form-control", @placeholder = "lbs." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.FrontGAWR, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.RearGAWR, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.RearGAWR, new { htmlAttributes = new { @class = "form-control", @placeholder = "lbs." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.RearGAWR, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.GVWR, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.GVWR, new { htmlAttributes = new { @class = "form-control", @placeholder = "lbs." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.GVWR, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ChassisSpecs.AprxCrbWghtStblty, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ChassisSpecs.AprxCrbWghtStblty, new { htmlAttributes = new { @class = "form-control", @placeholder = "lbs." } })
                            @Html.ValidationMessageFor(model => model.ChassisSpecs.AprxCrbWghtStblty, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    <input style="margin-bottom:20px;" type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Script.Foot())
{
    <script type="text/javascript">
        $("#showInfo").click(function () {
            if ($(this).text() == "Show Lift Families") {
                $(this).text("Hide Lift Families");
            } else {
                $(this).text("Show Lift Families");
            }
        });
    </script>
}