@model IEnumerable<Time.Data.EntityModels.TimeMFG.LoadList>

    @{var grid = new WebGrid(Model, canPage: false);}
    @grid.GetHtml(
             tableStyle: "table table-striped table-bordered table-condensed",
    columns: grid.Columns(
        grid.Column("Name", format: (item) => Html.ActionLink((string)item.Name, "Details", "LoadList", new { id = item.Id }, null)),
        grid.Column("DateIssued", header: "Issued Date", format: (item) => item.DateIssued.ToShortDateString()),
        grid.Column("DateRevised", header: "Revised Date", format: (item) => item.DateRevised == null ? "" : item.DateRevised.ToShortDateString()),
        grid.Column("DateSchedShip", header: "Schedule Ship Date", format: (item) => item.DateSchedShip == null ? "" : item.DateSchedShip.ToShortDateString()),
        grid.Column("TruckingCompany", header: "Trucking Company"),
        grid.Column("Comments", header: "Special Instructions"),
        grid.Column("Complete", header: "Cmp", style: "text-align-center", format: (item) =>
        {
            if (item.Complete == 1)
            {
                return Html.Raw(string.Format("<text><img src=\"{0}\" /></text>", Url.Content("~/Modules/Time.Epicor/Content/Images/CheckboxFull.png")));
            }
            else
            {
                return Html.Raw(string.Format("<text><img src=\"{0}\" /></text>", Url.Content("~/Modules/Time.Epicor/Content/Images/CheckboxEmpty.png")));
            }
        }),
        grid.Column("MakeReady", header: "Mk. Rdy", style: "text-align-center", format: (item) => (item.MakeReady == 1) ? Html.Raw("<img src='Content/images/CheckboxFull.png' />") : Html.Raw("<img src='Content/images/CheckboxEmpty.png' />")),
        grid.Column("AllDistributors", header: "Distributors", canSort: false),
        grid.Column("DEL", format: (item) => Html.ActionLink("Delete", "Delete", "LoadList", new { id = item.Id }, new { @class = "delete16image" }))
    ));


@*<table class="table table-striped table-bordered table-condensed">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateIssued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateRevised)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateSchedShip)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TruckingCompany)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Complete)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MakeReady)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Distributors)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.ActionLink(item.Name, "Details", "LoadList", new { id = item.Id }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateIssued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateRevised)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateSchedShip)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.TruckingCompany)
            </td>
            <td>
                @Html.DisplayWithBreaksFor(modelItem => item.Comments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Complete)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MakeReady)
            </td>
            <td>
                @String.Join(",",item.LoadListDistributors.Select(x => x.Name).ToArray())
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", "LoadList", new { id = item.Id }, new { @class = "delete16image" })
            </td>
        </tr>
    }
    </table>*@