@model IEnumerable<Time.Data.EntityModels.TimeMFG.LoadListJob>

<table class="table table-striped table-bordered table-condensed table-hover">

    <thead>
        <tr class="success">
            <th>
                <strong><p>ShpDate</p></strong>
            </th>
            <th>
                <p>MakeRdy</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.LoadList.Name)</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.SerialNo)</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.JobNumber)</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.LiftModel)</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.Claimed)</p>
            </th>
            @*Using <p> tags so that all the checkbox columns are the same size.  Using Alt + 0160 for the spaces so they show up*@
            <th>
                <p>  RT   </p>
            </th>
            <th>
                <p> Test </p>
            </th>
            <th>
                <p> Blue </p>
            </th>
            <th>
                <p>  Box  </p>
            </th>
            <th>
                <p> Ship </p>
            </th>
            <th>
                <p>  Ped </p>
            </th>
            <th>
                <p>  OR  </p>
            </th>
            <th>
                <p>Bukt </p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.Green)</p>
            </th>
            <th>
                <p>@Html.DisplayNameFor(model => model.LShip)</p>
            </th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LoadList.DateSchedShip)
            </td>
            <td>
                @Html.EditorFor(modelItem => item.LoadList.MakeReady, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoadList.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SerialNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LiftModel)
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Claimed, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.ReadyToTest, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Tested, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Blue, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Box, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Ship, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @if (item.Ped_Ignored != true)
                {
                    @Html.EditorFor(modelItem => item.Ped, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                }
            </td>
            <td>
                @if (item.OutRigger_Ignored != true)
                {
                    @Html.EditorFor(modelItem => item.OutRigger, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                }
            </td>
            <td>
                @if (item.Bucket_Ignored != true)
                {
                    @Html.EditorFor(modelItem => item.Bucket, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                }
            </td>
            <td>
                @Html.EditorFor(modelItem => item.Green, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
            <td>
                @Html.EditorFor(modelItem => item.LShip, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </td>
        </tr>
    }
</table>