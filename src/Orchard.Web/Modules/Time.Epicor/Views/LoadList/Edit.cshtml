@model Time.Data.EntityModels.TimeMFG.LoadList

@{
    Style.Require("jQueryUI_DatePicker").AtHead();
    Script.Require("jQueryUI_DatePicker").AtFoot();
    ViewBag.Title = "Edit LoadList : " + Model.Name;
}

<h2>@ViewBag.Title</h2>

<hr />

<ul class="list-inline">
    @*<li>@Html.ActionLink("LoadList Home Page", "Index", null, new { @class = "btn btn-primary" })</li>*@
    <a href="~/Epicor/LoadList/Index" class="btn btn-primary">LoadList Home Page</a>
</ul>

<hr />

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Load List</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.DateIssued, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.DateIssued)
                @Html.TextBoxFor(model => model.DateIssued, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DateIssued)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRevised, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.DateRevised)
                @Html.TextBoxFor(model => model.DateRevised, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.DateRevised)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateSchedShip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateSchedShip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateSchedShip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TruckingCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TruckingCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TruckingCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Complete)
                    @Html.ValidationMessageFor(model => model.Complete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Distributors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Distributors)
                @Html.DisplayFor(model => model.Distributors, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Distributors, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeReady, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MakeReady)
                    @Html.ValidationMessageFor(model => model.MakeReady, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    $("#DateSchedShip").datepicker({
        showOtherMonths: true,
        selectOtherMonths: true
    });
</script>
